Step 2:

Learning about Gulp:
====================

Open gulpfile.js

Service Worker Generator:
========================

gulp.task('service-worker', function(callback) {
  swPrecache.write(path.join(paths.build, 'service-worker.js'), {
    staticFileGlobs: [
      paths.build + '*'
    ],
    importScripts: [
      'scripts/sw-toolbox.js'
    ],
    stripPrefix: paths.build
  }, callback);
});




React Files Processor:
=====================

gulp.task('processReact', function() {
  gulp.src(path.join(paths.src, 'react/*.jsx'))
  .pipe(sourcemaps.init())
  .pipe(webpack(require('./webpack.config.js')))
  //.pipe(uglify())
  .pipe(sourcemaps.write())
  .pipe(gulp.dest(path.join(paths.build, 'react')));
});


Gulp Watcher Stuff:
==================

gulp.task('build', ['processLESS', 'processJS', 'processReact', 'processAssets', 'processHTML', 'processPWA', 'service-worker']);

gulp.task('default', ['serve']);

gulp.task('serve', ['build'], function() {
  browserSync.init({
    server: paths.build,
    port: 3000
  });
  gulp.watch(path.join(paths.src,'styles/**/*.less'), ['processLESS']).on('change', browserSync.reload);
  gulp.watch(path.join(paths.src,'scripts/**/*.js'), ['processJS']).on('change', browserSync.reload);
  gulp.watch(path.join(paths.src,'react/**/*.jsx'), ['processReact']).on('change', browserSync.reload);
  gulp.watch(path.join(paths.src,'*.html'), ['processHTML']).on('change', browserSync.reload);
});
